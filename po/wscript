#! /usr/bin/env python
# encoding: utf-8

top = '..'
build = '../build'

from waflib import Logs as logs

def spawn_pot(ctx):
	"""
	Create the initial pot file containing strings to translate.
	"""

	# convert all secondary dataformats (ui files, desktop, mimetypes) to headers

	nodes = ctx.path.ant_glob('*.ui')
	nodes.append(ctx.path.search(['oregano-mimetypes.xml.in', 'oregano.desktop.in']))
	ctx(rule='echo "[type: gettext/glade]${SRC}" >> '+build+'/po/POTFILES.in',
		source = nodes,
		target = 'po/POTFILES.in')

	ctx(rule='cd po; intltool-update --headers --verbose',
		source = 'po/POTFILES.in',
		target = [ctx.path.search(str(node)+'.h') for item in nodes])

	totranslate = ctx.path.ant_glob('**.{c,h}')
	ctx(rule = 'echo "${SRC}" >> '+build+'/${TGT}',
		source = totranslate,
		target = 'po/potfiles.in')

	# extract translateable strings from all c/h/generated h files
	bld(rule = 'xgettext -k_ -kN_ -E -f '+build+'/${SRC} --package-name='+ctx.env.appname+' --package-version '+ctx.env.version+' -o '+build+'/${TGT}',
		source = 'po/potfiles.in',
		target = 'po/'+ctx.env.appname+'.pot')


def update_po(ctx):
	"""
	Does not work yet.
	"""
	nodes = ctx.path.ant_glob('../build**.po')
	for node in nodes:
		ctx(rule = 'msgmerge -U "${SRC}" "${TGT}"',
			source = node,
			target = node)


def options(opts):
	pass


def configure(conf):
	pass


def build(bld):

	bld(
		features='intltool_po',
		appname=bld.env.appname,
		podir='.',
		install_path="${LOCALEDIR}")
